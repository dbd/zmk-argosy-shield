#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define COLEMAK 0
#define QWERTY 1
#define WASD 2
#define SYM 3
#define NAV 4
#define DOUBLE 5
#define ADJUST 6

// additional caps word keys

&caps_word { continue-list = <UNDERSCORE MINUS LS(MINUS) UP DOWN LEFT RIGHT BSPC DEL>; };

/ {
    behaviors {
        lthp: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        mthp: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&kp>, <&kp>;
        };

        mtt: mtt {
            compatible = "zmk,behavior-hold-tap";
            label = "MTT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-unless-interrupted";
        };
    };

    macros {
        // undead `

        ud_grave: ud_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp SPACE>;
        };

        // undead ~

        ud_tilde: ud_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp TILDE &kp SPACE>;
        };

        // undead ^

        ud_caret: ud_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp CARET &kp SPACE>;
        };

        // undead '

        ud_sqt: ud_sqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp SQT &kp SPACE>;
        };

        // undead "

        ud_dqt: ud_dqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LS(SQT) &kp SPACE>;
        };

        // ascii arrow ->

        asc_arr: asc_arr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp MINUS &kp LS(DOT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            display-name = "QWERTY";
            bindings = <
&kp GRAVE     &kp N1        &kp N2            &kp N3     &kp N4     &kp N5             &kp N6        &kp N7     &kp N8     &kp N9      &kp N0                &kp BACKSPACE
&kp TAB       &kp Q         &kp W             &kp E      &kp R      &kp T              &kp Y         &kp U      &kp I      &kp O       &kp P                 &kp BACKSLASH
&kp LSHIFT    &kp A         &kp S             &kp D      &kp F      &kp G              &kp H         &kp J      &kp K      &kp L       &lthp 1 SEMICOLON     &mtt LEFT_META SQT
&kp LCTRL     &kp Z         &kp X             &kp C      &kp V      &kp B              &kp N         &kp M      &kp COMMA  &kp DOT     &mthp LEFT_ALT SLASH  &kp END
&kp HOME      &kp F1        &kp LG(LEFT_ALT)  &kp LG(C)  &kp LG(V)  &kp LC(B)          &mo 1         &kp SPACE  &kp F8     &kp F9      &kp F10               &kp END
&kp NUMBER_1  &kp LEFT_ALT  &kp LEFT_GUI      &kp ENTER  &mo 2      &kp LS(LA(LC(M)))  &kp NUMBER_6  &mo 1      &kp SPACE  &kp DELETE  &kp LC(LEFT_ALT)      &kp RC(RIGHT_ALT)
            >;

            sensor-bindings =
                <&inc_dec_kp PG_DN C_VOL_UP>,
                <&inc_dec_kp PG_DN PG_UP>;
        };

        layer1 {
            display-name = "symbols";
            bindings = <
&kp ESC  &kp F1  &kp F2  &kp F3        &kp F4        &kp F5  &trans          &trans  &trans  &trans  &trans            &trans
&trans   &trans  &trans  &kp MINUS     &kp EQUAL     &trans  &trans          &trans  &trans  &trans  &kp C_PLAY_PAUSE  &trans
&trans   &trans  &trans  &kp LBKT      &kp RBKT      &trans  &kp LS(INSERT)  &trans  &trans  &trans  &trans            &trans
&trans   &trans  &trans  &kp LS(LBRC)  &kp LS(RBRC)  &trans  &kp C_MUTE      &trans  &trans  &trans  &trans            &trans
&kp DEL  &trans  &trans  &trans        &trans        &trans  &trans          &trans  &trans  &trans  &trans            &trans
&trans   &trans  &trans  &trans        &mo 3         &mo 1   &kp SPACE       &trans  &trans  &trans  &trans            &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        gaming_layer {
            display-name = "Move";
            bindings = <
&trans  &trans     &trans  &trans  &trans  &trans  &kp F6    &kp F7             &kp F8  &kp F9     &kp F10  &kp F11
&trans  &trans     &trans  &trans  &trans  &trans  &trans    &trans             &trans  &trans     &trans   &trans
&trans  &trans     &trans  &trans  &trans  &trans  &kp LEFT  &kp DOWN           &kp UP  &kp RIGHT  &trans   &trans
&trans  &trans     &trans  &trans  &trans  &trans  &trans    &kp LC(LA(LS(M)))  &trans  &trans     &trans   &trans
&trans  &trans     &trans  &trans  &trans  &trans  &trans    &trans             &trans  &trans     &trans   &trans
&trans  &kp ENTER  &mo 2   &mo 1   &trans  &trans  &trans    &mo 3              &trans  &trans     &trans   &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp LC(E) LC(Y)>;
        };

        // left mod

        sym_layer {
            display-name = "Bluetooth";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &none
&trans  &trans        &trans        &trans        &none         &trans        &trans  &trans  &trans  &trans  &trans  &trans
&none   &trans        &trans        &trans        &asc_arr      &none         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none         &ud_grave     &trans        &trans        &trans        &trans  &trans  &none   &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ENTER     &mo 2         &mo 1         &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        // right mod
        // double mod
    };
};
