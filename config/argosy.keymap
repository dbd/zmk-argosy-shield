#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define COLEMAK 0
#define QWERTY 1
#define WASD 2
#define SYM 3
#define NAV 4
#define DOUBLE 5
#define ADJUST 6

// additional caps word keys

&caps_word { continue-list = <UNDERSCORE MINUS LS(MINUS) UP DOWN LEFT RIGHT BSPC DEL>; };

/ {
    behaviors {
        lthp: layer_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        mthp: mod_tap_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // undead `

        ud_grave: ud_grave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp SPACE>;
        };

        // undead ~

        ud_tilde: ud_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp TILDE &kp SPACE>;
        };

        // undead ^

        ud_caret: ud_caret {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp CARET &kp SPACE>;
        };

        // undead '

        ud_sqt: ud_sqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp SQT &kp SPACE>;
        };

        // undead "

        ud_dqt: ud_dqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LS(SQT) &kp SPACE>;
        };

        // ascii arrow ->

        asc_arr: asc_arr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp MINUS &kp LS(DOT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            display-name = "QWERTY";
            bindings = <
&kp GRAVE   &kp N1  &kp N2        &kp N3         &kp N4     &kp N5  &kp N6     &kp N7     &kp N8     &kp N9   &kp N0                &kp BACKSPACE
&kp TAB     &kp Q   &kp W         &kp E          &kp R      &kp T   &kp Y      &kp U      &kp I      &kp O    &kp P                 &kp BACKSLASH
&kp LSHIFT  &kp A   &kp S         &kp D          &kp F      &kp G   &kp H      &kp J      &kp K      &kp L    &lthp 1 SEMICOLON     &mthp LEFT_META SQT
&kp LCTRL   &kp Z   &kp X         &kp C          &kp V      &kp B   &kp N      &kp M      &kp COMMA  &kp DOT  &mthp LEFT_ALT SLASH  &kp END
&kp HOME    &kp F1  &kp LEFT_ALT  &kp LEFT_META  &kp ENTER  &mo 2   &mo 1      &kp SPACE  &kp F8     &kp F9   &kp F10               &kp LALT
&trans      &trans  &trans        &kp ENTER      &mo 2      &mo 1   &kp SPACE  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        layer1 {
            display-name = "layer1";
            bindings = <
&kp ESC    &trans  &trans    &trans        &trans        &trans     &trans          &trans     &trans    &trans    &trans     &trans
&kp TAB    &trans  &trans    &kp MINUS     &kp EQUAL     &trans     &trans          &trans     &trans    &trans    &trans     &trans
&kp LSHFT  &trans  &trans    &kp LBKT      &kp RBKT      &trans     &kp LS(INSERT)  &trans     &trans    &trans    &trans     &trans
&kp LCTRL  &trans  &trans    &kp LS(LBRC)  &kp LS(RBRC)  &kp LC(B)  &kp C_MUTE      &kp C_PP   &kp K     &kp H     &kp COMMA  &kp DOT
&kp DEL    &trans  &kp LGUI  &kp LALT      &lthp 3 ESC   &mo 3      &kp ENTER       &lt 0 ESC  &kp RALT  &kp RGUI
&trans      &trans  &trans        &kp ENTER      &mo 2      &mo 1   &kp SPACE  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        gaming_layer {
            display-name = "WASD";
            bindings = <
&kp GRAVE  &kp N1     &kp N2     &kp N3     &kp N4     &trans  &trans    &trans             &trans  &trans     &kp TAB  &kp TAB
&trans     &kp W      &kp E      &kp R      &trans     &trans  &trans    &trans             &trans  &trans     &trans   &kp LCTRL
&trans     &kp A      &kp S      &kp D      &kp F      &trans  &kp LEFT  &kp DOWN           &kp UP  &kp RIGHT  &trans   &trans
&trans     &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp V   &trans    &kp LC(LA(LS(M)))  &trans  &trans     &trans   &trans
&trans     &trans     &trans     &trans     &trans     &trans  &mo 3     &trans             &trans  &trans
&trans      &trans  &trans        &kp ENTER      &mo 2      &mo 1   &kp SPACE  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        // left mod

        sym_layer {
            display-name = "Symbols";
            bindings = <
&kp F1    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4     &kp F7     &kp F8     &kp F9      &kp F10   &trans     &none
&kp BSLH  &kp PRCNT     &kp DLLR      &kp RA(LS(S))  &none         &kp PIPE         &ud_caret  &kp SLASH  &kp RA(N5)  &kp F11   &trans     &trans
&none     &kp LPAR      &kp RPAR      &kp COLON      &asc_arr      &none            &ud_dqt    &kp UNDER  &kp LBKT    &kp RBKT  &kp F12    &trans
&trans    &none         &ud_grave     &kp AT         &kp AMPS      &kp RC(RA(F14))  &trans     &trans     &none       &kp HASH  &kp QMARK  &kp EXCL
&trans    &trans        &trans        &trans         &trans        &trans           &trans     &mo 0      &trans      &trans
&trans      &trans  &trans        &kp ENTER      &mo 2      &mo 1   &kp SPACE  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
        };

        // right mod
        // double mod
    };
};
